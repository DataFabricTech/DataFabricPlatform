###
###
POST http://{{host}}:{{port}}/portal/v1/search
Content-Type: application/json

{
  "keyword": "test",
  "pageable": {
    "page": {
      "size": 10,
      "selectPage": 0
    },
    "sort": [
      {
        "order": 1,
        "field": "id",
        "direction": 1
      },
      {
        "order": 2,
        "field": "name",
        "direction": 0
      }
    ]
  },
  "detailSearch": {
    "DATA_NAME": "test",
    "DATA_TYPE": "STRUCTURED",
    "DATA_FORMAT": "CSV",
    "CATEGORY": "FINANCE",
    "TAG": "TAG1",
    "STORAGE_TYPE": "HDFS",
    "CONNECTOR_NAME": "CONNECTOR_NAME1",
    "CREATOR": "CREATOR1",
    "START_DATE": "2021-10-30 12:23:34.200",
    "END_DATE": "2021-10-30 12:23:34.200"
  }
}

<> 2023-10-30T194100.200.json

###
GET http://{{host}}:{{port}}/portal/v1/recent-searches
Accept: application/json

<> 2023-10-30T164312.200.json

### Supported Storage Type List
GET http://{{host}}:{{port}}/storage/v1/storage-type
Accept: application/json

### Adaptor List And Input Field Options
GET http://{{host}}:{{port}}/storage/v1/adaptors?storage-type=postgres
Accept: application/json

### Connect Test - Auth Fail
POST http://{{host}}:{{port}}/storage/v1/connect-test
Content-Type: application/json

{
    "adaptorId": "244e4f0f-e3e5-4c54-a04b-61b83a1f09af",
    "advancedOptions": [
        {
            "key": "user",
            "value": "postgres"
        },
        {
            "key": "password",
            "value": "test"
        },
        {
            "key": "test",
            "value": "123"
        }
    ],
    "basicOptions": [
        {
            "value": "postgres",
            "key": "host"
        },
        {
            "key": "port",
            "value": "5432"
        },
        {
            "key": "database",
            "value": "postgres"
        },
        {
            "key": "test",
            "value": "postgres"
        }
    ],
    "url_format": "jdbc:postgresql://{host}:{port}/{database}"
}


### Connect Test - Connection Refused
POST http://{{host}}:{{port}}/storage/v1/connect-test
Content-Type: application/json

{
  "adaptorId": "244e4f0f-e3e5-4c54-a04b-61b83a1f09af",
  "advancedOptions": [
    {
      "key": "user",
      "value": "postgres"
    },
    {
      "key": "password",
      "value": "test"
    },
    {
      "key": "test",
      "value": "123"
    }
  ],
  "basicOptions": [
    {
      "value": "postgres",
      "key": "host"
    },
    {
      "key": "port",
      "value": "5432"
    },
    {
      "key": "database",
      "value": "postgres"
    },
    {
      "key": "test",
      "value": "postgres"
    }
  ],
  "url_format": "jdbc:postgresql://{host}:{port}/{database}"
}


### Connect Test
POST http://{{host}}:{{port}}/storage/v1/connect-test
Content-Type: application/json

{
  "adaptorId" : "ADAPTOR_ID1",
  "url" : "ADAPTOR_ID1",
  "basicOption": [
    {
      "key": "HOST",
      "value": "192.168.100.180"
    },
    {
      "key": "PORT",
      "value": "1234"
    },
    {
      "key": "PORT",
      "value": "1234"
    },
    {
      "key": "PORT",
      "value": "1234"
    },
    {
      "key": "PORT",
      "value": "1234"
    }
  ]
}


### Stroage Add
POST http://{{host}}:{{port}}/storage/v1/connect-test
Content-Type: application/json

{
  "name": "test-storage",
  "description": "test-storage",
  "userMeta": [
    {
      "key": "project",
      "value": "data-fabric"
    }
  ],
  "tag": [
    "tag1",
    "tag2"
  ],
  "storageType": "IRIS",
  "adaptorId": "ADAPTOR_ID1",
  "url": "jdbc://{host}:{port}/{database}?user={username}&password={password}",
  "basicOptions": [
    {
      "key": "HOST",
      "value": "1.2.3.4"
    },
    {
      "key": "PORT",
      "value": "12345"
    },
    {
      "key": "DATABASE",
      "value": "database"
    },
    {
      "key": "USER",
      "value": "12345"
    },
    {
      "key": "PASSWORD",
      "value": "12345"
    }
  ],
  "settings": {
    "authAddSetting": {
      "enable": true,
      "options": [
        {
          "regex": "*",
          "dataType": "STRUCTURED",
          "dataFormat": "TABLE"
        }
      ]
    }
  }
}

### Connected Data
GET http://{{host}}:{{port}}/storage/v1/connected-data
Accept: application/json

### Stroage Delete
POST http://{{host}}:{{port}}/storage/v1/delete
Content-Type: application/json

{
  "id" : "Storage-id"
}

###
POST http://{{host}}:{{port}}/storage/v1/connect-test
Content-Type: application/json

{
  "adaptorId" : "ADAPTOR_ID1",
  "url" : "ADAPTOR_ID1",
  "basicOption": [
    {
      "key": "HOST",
      "value": "192.168.100.180"
    },
    {
      "key": "PORT",
      "value": "1234"
    },
    {
      "key": "PORT",
      "value": "1234"
    },
    {
      "key": "PORT",
      "value": "1234"
    },
    {
      "key": "PORT",
      "value": "1234"
    }
  ]
}

###
GET http://{{host}}:{{port}}/storage/v1/overview
Accept: application/json

<> 2023-10-31T205239.200.json

###
POST http://{{host}}:{{port}}/storage/v1/search
Content-Type: application/json

{
  "filter": {
    "name": "test",
    "storageType": [
      "IRIS",
      "HDFS"
    ],
    "status": [
      0,
      1
    ]
  },
  "sort": [
    {
      "order": 1,
      "field": "id",
      "direction": 1
    },
    {
      "order": 2,
      "field": "name",
      "direction": 0
    }
  ]
}


###
POST http://{{host}}:{{port}}/storage/v1/status
Content-Type: application/json

{
    "id": "STORAGE_ID1"
}

<> 2023-10-31T205629.200.json

###
POST http://{{host}}:{{port}}/storage/v1/default
Content-Type: application/json

{
  "id": "STORAGE_ID1"
}

<> 2023-10-31T205625.200.json

###
POST http://{{host}}:{{port}}/storage/v1/advanced
Content-Type: application/json

{
  "id": "STORAGE_ID1"
}

<> 2023-10-31T205627.200.json


### Browse
POST http://{{host}}:{{port}}/storage/v1/browse
Content-Type: application/json

{
  "id": "STORAGE_ID1",
  "path": "/",
  "depth": 2
}

### Browse
POST http://{{host}}:{{port}}/storage/v1/browse
Content-Type: application/json

{
  "id": "STORAGE_ID1",
  "path": "/database",
  "depth": 1
}

### Browse / Default
POST http://{{host}}:{{port}}/storage/v1/browse/default
Content-Type: application/json

{
  "id": "STORAGE_ID1",
  "path": "/database",
  "name": "table-name"
}



### preview error
POST http://{{host}}:{{port}}/data/v1/preview
Content-Type: application/json

{
  "id": "d8af6378-97d1-41b9-82e5-b9be3b171145"
}


### preview success
POST http://{{host}}:{{port}}/data/v1/preview
Content-Type: application/json

{
  "id": "datacatalog-id"
}

### data detail / default error
POST http://{{host}}:{{port}}/data/v1/preview
Content-Type: application/json

{
  "id": "err-id"
}

### data detail / default success
POST http://{{host}}:{{port}}/data/v1/default
Content-Type: application/json

{
  "id": "datacatalog-id"
}


### datacatalog - user metadata update - err
POST http://{{host}}:{{port}}/data/v1/metadata
Content-Type: application/json

{
  "id": "0",
  "userMeta": [
    {
      "key": "key1",
      "value": "value1"
    },
    {
      "key": "key2",
      "value": "value2"
    },
    {
      "key": "key3",
      "value": "value3"
    }
  ]
}

### datacatalog - user metadata update - success
POST http://{{host}}:{{port}}/data/v1/metadata
Content-Type: application/json

{
  "id": "data-id",
  "userMeta": [
    {
      "key": "key1",
      "value": "value1"
    },
    {
      "key": "key2",
      "value": "value2"
    },
    {
      "key": "key3",
      "value": "value3"
    }
  ]
}


### datacatalog - tag update - err
POST http://{{host}}:{{port}}/data/v1/tag
Content-Type: application/json

{
  "id": "0",
  "tag": ["tag1", "tag2", "tag3"]
}

### datacatalog - tag update - success
POST http://{{host}}:{{port}}/data/v1/tag
Content-Type: application/json

{
  "id": "data-id",
  "tag": [ "tag1", "tag2", "tag3" ]
}


### datacatalog - download request - err
POST http://{{host}}:{{port}}/data/v1/download-request
Content-Type: application/json

{
  "id": "0"
}

### datacatalog - download request - success
POST http://{{host}}:{{port}}/data/v1/download-request
Content-Type: application/json

{
  "id": "data-id"
}


### datacatalog - comment add - err
POST http://{{host}}:{{port}}/data/v1/comment/add
Content-Type: application/json

{
  "id": "0",
  "ratingAndComment": {
    "rating": 7,
    "comment": "좋아요"
  }
}

### datacatalog - comment add - success
POST http://{{host}}:{{port}}/data/v1/comment/add
Content-Type: application/json

{
  "id": "1",
  "ratingAndComment": {
    "rating": 4,
    "comment": "좋아요"
  }
}
### datacatalog - comment update - err
POST http://{{host}}:{{port}}/data/v1/comment/update
Content-Type: application/json

{
  "id": "0",
  "ratingAndComment": {
    "id": "comment id",
    "rating": 4,
    "comment": "좋아요"
  }
}

### datacatalog - comment update - success
POST http://{{host}}:{{port}}/data/v1/comment/update
Content-Type: application/json

{
  "id": "1",
  "ratingAndComment": {
    "id": "comment id",
    "rating": 2,
    "comment": "좋아요"
  }
}
### datacatalog - comment delete - err
POST http://{{host}}:{{port}}/data/v1/comment/delete
Content-Type: application/json

{
  "id": "0",
  "ratingAndComment": {
    "id": "comment id"
  }
}

### datacatalog - comment delete - success
POST http://{{host}}:{{port}}/data/v1/comment/delete
Content-Type: application/json

{
  "id": "1",
  "ratingAndComment": {
    "id": "comment id"
  }
}


### datacatalog - all data summary
POST http://{{host}}:{{port}}/data/v1/all-data/summary
Content-Type: application/json

{
  "filter": {
    "keyword": "test",
    "dateRange": {
        "from": "2021-10-30 12:23:34.200",
        "to": "2021-10-30 12:23:34.200"
    },
    "dataType": "STRUCTURED",
    "dataFormat": "CSV"
  },
  "pageable": {
    "page": {
        "size": 10,
        "selectPage": 0
    },
    "sort": [
      {
        "order": 1,
        "field": "id",
        "direction": 1
      },
      {
        "order": 2,
        "field": "createdAt",
        "direction": 1
      }
    ]
  }
}

### datacatalog - all data
POST http://{{host}}:{{port}}/data/v1/all-data/summary
Content-Type: application/json

{
  "filter": {
    "keyword": "test",
    "dateRange": {
      "from": "2021-10-30 12:23:34.200",
      "to": "2021-10-30 12:23:34.200"
    },
    "dataType": "STRUCTURED",
    "dataFormat": "CSV"
  },
  "pageable": {
    "page": {
      "size": 10,
      "selectPage": 0
    },
    "sort": [
      {
        "order": 1,
        "field": "id",
        "direction": 1
      },
      {
        "order": 2,
        "field": "createdAt",
        "direction": 1
      }
    ]
  }
}
