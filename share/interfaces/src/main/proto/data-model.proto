syntax = "proto3";

option java_multiple_files = true;
option java_package = "com.mobigen.datafabric.share.interfaces";
option java_outer_classname = "DataModelProto";

import "utilities.proto";
import "user.proto";

service DataModelService {
  //  POST /data/v1/preview - 미리보기
  rpc Preview(ReqId) returns (DataModelPreview);
  //  POST /data/v1/default - 데이터 상세 보기 - 기본 정보
  rpc Default(ReqId) returns (DataModelDefault);
  //  POST /data/v1/metadata - 사용자 설정 메타 데이터 업데이트
  rpc UserMetadata(ReqMetaUpdate) returns (CommonResponse);
  //  POST /data/v1/tag - 데이터 태그 업데이트
  rpc Tag(ReqTagUpdate) returns (CommonResponse);
  //  POST /data/v1/download-request - 다운로드 요청
  rpc DownloadRequest(ReqId) returns (CommonResponse);

  //  POST /data/v1/comment/add - 데이터 평가와 댓글 추가
  rpc AddComment(ReqRatingAndComment) returns (CommonResponse);
  //  POST /data/v1/comment/update - 데이터 평가와 댓글 업데이트
  rpc UpdateComment(ReqRatingAndComment) returns (CommonResponse);
  //  POST /data/v1/comment/delete - 데이터 평가와 댓글 삭제
  rpc DelComment(ReqRatingAndComment) returns (CommonResponse);

  //  POST /data/v1/all-data/summary - 데이터 모델 조회 축약 버전( 이름, 상태 정도의 정보만 전달 )
  rpc AllDataSummary(DataModelSearch) returns (ResDataModels);
  //  POST /data/v1/all-data          - 데이터 모델 조회
  rpc AllData(DataModelSearch) returns (ResDataModels);
}

// DataModel 검색 결과, 미리보기, 기본 정보를 위한 데이터
message DataModel {
  string id = 1;
  string name = 2;
  string description = 3;

  string status = 4;

  string dataType = 5;
  string dataFormat = 6;

  // 저장소 정보와 원본 데이터로부터 가상화 설정 정보
  repeated DataLocation dataLocation = 11;
  DataRefine dataRefine = 12;
  // 전처리 후 가상화된 최종 데이터 구조
  repeated DataStructure dataStructure = 13;

  // 카테고리, 메타 데이터, 태그
  repeated Category category = 14;
  repeated Meta systemMeta = 15;
  repeated Meta userMeta = 16;
  repeated string tag = 17;

  Permission permission = 18;
  //  SampleData sampleData = 19;
  DownloadInfo downloadInfo = 20;

  // 사용자들의 평가 정보
  message RatingAndComments {
    double avgRating = 1;
    repeated RatingAndComment ratingAndComment = 2;
  }
  RatingAndComments ratingAndComments = 21;

  DataModelStatistics statistics = 22;

  User creator = 23;
  DateTime createdAt = 24;
  User lastModifier = 25;
  DateTime lastModifiedAt = 26;
}

message DataLocation {
  string storageId = 1;
  string databaseName = 2;
  string dataPath = 3;
  string tableName = 4;
  string fileName = 5;

  string scope = 6;
  string sheetName = 7;
  string callRange = 8;
  string separator = 9;
  string beginTime = 10;
  string endTime = 11;
}

message DataRefine {
  string json = 1;
  string query = 2;
}

message DataStructure {
  int32 order = 1;
  string name = 2;
  string colType = 3;
  int32 length = 4;
  string defaultValue = 5;
  string description = 6;
}

message Category {
  string id = 1;
  string name = 2;
  string description = 3;
  string parentId = 4;
  string path = 5;
}

message Permission {
  bool read = 1;
  bool write = 2;
}

//message SampleData {
//  string url = 1;
//}

message DownloadInfo {
  enum DownloadStatus {
    READY = 0;
    DOWNLOADING = 1;
    DOWNLOADED = 2;
  }
  DownloadStatus status = 1;
  string url = 2;
}

message RatingAndComment {
  string id = 1;
  User user = 2;
  DateTime lastModifiedAt = 3;
  int32 rating = 4;
  string comment = 5;
}

// DataModelStatistics 데이터 모델 통계
message DataModelStatistics {
  string time = 1;                    // 통계 시간
  string id = 2;                      // 데이터 아이디
  string name = 3;                    // 데이터 이름

  int64 access = 4;                   // 조회 수
  int64 bookmark = 5;                 // 사용자 개인 카테고리 추가 수
  int64 download = 6;                 // 다운로드 수
  double rating = 7;                  // 데이터 평가 평균
  double avgResponseTime = 8;         // 데이터 조회 평균 응답 시간
}

// DataModel Preview
message DataModelPreview {
  string code = 1;
  string errMsg = 2;
  message Data {
    DataModel dataPreview = 1;
  }
  Data data = 3;
}

// DataModel Default
message DataModelDefault {
  string code = 1;
  string errMsg = 2;
  message Data {
    DataModel dataModel = 1;
  }
  Data data = 3;
}

// Update Metadata
message ReqMetaUpdate {
  string id = 1;
  repeated Meta userMeta = 2;
}

// Update Tag
message ReqTagUpdate {
  string id = 1;              // 데이터 아이디
  repeated string tag = 2;
}

message ReqRatingAndComment {
  string id = 1;              // 데이터 아이디
  RatingAndComment ratingAndComment = 2;
}

message DataModelSearch {
  message DataModelSearchFilter {
    string keyword = 1;
    message DateRange {
      string from = 1;
      string to = 2;
    }
    DateRange dateRange = 2;
    string dataType = 3;
    string dataFormat = 4;
  }
  DataModelSearchFilter filter = 1;
  Pageable pageable = 2;
}

message ResDataModels {
  string code = 1;
  string errMsg = 2;
  message Data {
    Pageable pageable = 1;
    repeated DataModel dataModels = 2;
  }
  Data data = 3;
}
